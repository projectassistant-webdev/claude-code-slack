name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check Python version
      run: python --version

    - name: Test installation script
      run: |
        chmod +x install.sh
        ./install.sh --help || true

    - name: Verify hook scripts are executable
      run: |
        chmod +x hooks/*.py
        for hook in hooks/*.py; do
          echo "Checking $hook"
          python3 -m py_compile "$hook"
        done

    - name: Verify command modules
      run: |
        python3 -c "from commands.slack import slack_utils; print('✓ slack_utils imports successfully')"
        python3 -c "from commands.slack import setup_handler; print('✓ setup_handler imports successfully')"
        python3 -c "from commands.slack import start_handler; print('✓ start_handler imports successfully')"
        python3 -c "from commands.slack import stop_handler; print('✓ stop_handler imports successfully')"
        python3 -c "from commands.slack import status_handler; print('✓ status_handler imports successfully')"
        python3 -c "from commands.slack import remove_handler; print('✓ remove_handler imports successfully')"

    - name: Run test structure verification
      run: python3 tests/run_tests.py || true

    - name: Check documentation links
      run: |
        for file in README.md docs/*.md; do
          echo "Checking $file for broken links..."
          grep -oE 'https?://[^)]+' "$file" | while read url; do
            if [[ "$url" == *"github.com/projectassistant-webdev"* ]]; then
              echo "  - Internal link (will work after push): $url"
            elif [[ "$url" == *"YOUR"* ]] || [[ "$url" == *"your-"* ]]; then
              echo "  - Placeholder link (expected): $url"
            else
              echo "  - External link: $url"
            fi
          done
        done

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install ruff
      run: pip install ruff

    - name: Run ruff check
      run: ruff check . --exclude=tests/ || true

    - name: Check file permissions
      run: |
        echo "Checking file permissions..."
        find . -name "*.py" -type f | while read file; do
          if [[ "$file" == *"/hooks/"* ]]; then
            if [[ ! -x "$file" ]]; then
              echo "Warning: Hook script not executable: $file"
            fi
          fi
        done

  release:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Check VERSION file
      id: version
      run: |
        VERSION=$(cat VERSION)
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Create Release Package
      run: |
        chmod +x scripts/create-release.sh
        ./scripts/create-release.sh --test

    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-package-${{ steps.version.outputs.VERSION }}
        path: releases/